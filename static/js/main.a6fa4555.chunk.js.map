{"version":3,"sources":["index.tsx","slices/timerSlice.tsx","assets lazy /^/.//.*/.svg$/ groupOptions: {} namespace object","GlobalStyles.tsx","hooks/useInterval.ts","components/timer-main/TimerMain.tsx","components/control-buttons/ControlButtons.tsx","components/task-info/TaskInfo.tsx","App.tsx","store/rootReducer.ts","store/store.ts"],"names":["App","require","default","ReactDOM","render","store","document","getElementById","timerSlice","createSlice","name","initialState","timer","isActive","phase","isNotificationOn","isSoundOn","type","reducers","setTimer","state","payload","setType","setPhase","setIsSoundOn","setIsNotificationOn","undefined","setIsActive","actions","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","GlobalStyle","createGlobalStyle","useInterval","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","LabelContainer","styled","div","Label","Minutes","TimerMainContainer","DonutElement","Donut","DonutVal","DonutValue","TimerMain","useAppSelector","useState","initialTime","setInitialTime","dispatch","useAppDispatch","phaseLocal","localStorage","getItem","localParsed","JSON","parse","localTimer","window","Notification","permission","requestPermission","console","log","setItem","stringify","body","icon","Audio","play","linecap","strokeWidth","styleTrack","stroke","styleIndicator","opacity","showValue","symbol","ImagePlay","img","ImageSound","ImageNotification","ControlButtonsContainer","Button","button","model","ControlButtons","imgPlay","setImgPlay","imgNotification","setImgNotification","imgSound","setImgSound","localNotification","localSound","importImage","condition","string1","string2","a","imgPath","onClick","src","alt","TaskInfoContainer","TaskName","TaskList","ul","TaskItem","li","item","TaskInfo","toUpperCase","slice","Array","el","i","AppContainer","Title","h4","rootReducer","combineReducers","configureStore","reducer","createSelectorHook","useDispatch"],"mappings":"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","file":"static/js/main.a6fa4555.chunk.js","sourcesContent":["import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nconst render = () => {\n  const App = require(\"./App\").default;\n\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n};\n\nrender();\n\nif (process.env.NODE_ENV === \"development\" && module.hot) {\n  module.hot.accept(\"./App\", render);\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport type PomodoroTypes = 'work' | 'rest' | 'big rest';\n\ntype TimerState = {\n  timer: number;\n  phase: number;\n  isActive: boolean;\n  isNotificationOn: boolean;\n  isSoundOn: boolean;\n  type: PomodoroTypes;\n};\n\nconst initialState: TimerState = {\n  timer: 25,\n  isActive: false,\n  phase: 1,\n  isNotificationOn: false,\n  isSoundOn: true,\n  type: 'work',\n};\n\nconst timerSlice = createSlice({\n  name: 'timer',\n  initialState,\n  reducers: {\n    setTimer(state, { payload }: PayloadAction<'decrease'>) {\n      if (payload === 'decrease') {\n        state.timer--;\n      } else {\n        state.timer = payload;\n      }\n    },\n    setType(state, { payload }: PayloadAction<PomodoroTypes>) {\n      state.type = payload;\n    },\n    setPhase(state, { payload }: PayloadAction<number | 'increase'>) {\n      if (payload === 'increase') {\n        state.isActive = false;\n        state.phase++;\n        if (state.phase === 9) {\n          state.phase = 1;\n          state.timer = 25;\n        } else if (state.phase === 8) {\n          state.timer = 15;\n        } else if (state.phase % 2) {\n          state.timer = 25;\n        } else {\n          state.timer = 5;\n        }\n      } else {\n        state.phase = payload;\n      }\n    },\n    setIsSoundOn(state, { payload }: PayloadAction<boolean | undefined>) {\n      if (payload) {\n        state.isSoundOn = payload;\n      } else {\n        state.isSoundOn = !state.isSoundOn;\n      }\n    },\n    setIsNotificationOn(\n      state,\n      { payload }: PayloadAction<boolean | undefined>\n    ) {\n      if (payload === undefined) {\n        state.isNotificationOn = !state.isNotificationOn;\n      } else {\n        state.isNotificationOn = payload;\n      }\n    },\n    setIsActive(state, { payload }: PayloadAction<boolean | undefined>) {\n      if (payload) {\n        state.isActive = payload;\n      } else {\n        state.isActive = !state.isActive;\n      }\n    },\n  },\n});\n\nexport const {\n  setIsActive,\n  setIsNotificationOn,\n  setIsSoundOn,\n  setPhase,\n  setTimer,\n  setType,\n} = timerSlice.actions;\n\nexport default timerSlice.reducer;\n","var map = {\n\t\"./mute.svg\": [\n\t\t42,\n\t\t3\n\t],\n\t\"./nonotification.svg\": [\n\t\t43,\n\t\t4\n\t],\n\t\"./notification.svg\": [\n\t\t44,\n\t\t5\n\t],\n\t\"./pause.svg\": [\n\t\t45,\n\t\t6\n\t],\n\t\"./play.svg\": [\n\t\t46,\n\t\t7\n\t],\n\t\"./sound.svg\": [\n\t\t47,\n\t\t8\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 40;\nmodule.exports = webpackAsyncContext;","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  *,\n  *::before,\n  *::after {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: Quicksand;\n  }\n  #root,\n  html,\n  body {\n    height: 100vh;\n    min-height: 570px;\n    background: linear-gradient(119.36deg, #464c6e 0%, #272b45 100%);\n  }\n\n  li {\n    list-style-type: none;\n  }\n  \n  button {\n    cursor: pointer;\n    border: 0;\n    background: transparent;\n  }\n`;\n\nexport default GlobalStyle;\n","import { useRef, useEffect } from \"react\";\n\nconst useInterval = (callback: () => void, delay: number | null) => {\n  const savedCallback = useRef<() => void | null>();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      if (typeof savedCallback?.current !== \"undefined\") {\n        savedCallback?.current();\n      }\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n};\n\nexport default useInterval;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Donut, DonutValue } from 'react-donut-component';\nimport { useAppDispatch, useAppSelector } from 'store';\nimport { useInterval } from 'hooks';\nimport { setPhase, setTimer, setType } from 'slices';\n\nconst TimerMain = () => {\n  const {\n    timer,\n    isActive,\n    isNotificationOn,\n    isSoundOn,\n    phase,\n  } = useAppSelector(({ timer }) => timer);\n\n  const [initialTime, setInitialTime] = useState(timer);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    const phaseLocal = localStorage.getItem('phase');\n    if (phaseLocal) {\n      const localParsed = JSON.parse(phaseLocal);\n      dispatch(setPhase(localParsed));\n    }\n    const localTimer = localStorage.getItem('timer');\n    if (localTimer) {\n      const localParsed = JSON.parse(localTimer);\n      dispatch(setTimer(localParsed));\n    }\n\n    if (\n      !(\n        'Notification' in window ||\n        Notification.permission === 'denied' ||\n        Notification.permission === 'default'\n      )\n    ) {\n      console.log(\"Browser doesn't supports notifications\");\n    } else if (Notification.permission !== 'denied') {\n      Notification.requestPermission();\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('phase', JSON.stringify(phase));\n    dispatch(setType(phase === 8 ? 'big rest' : phase % 2 ? 'work' : 'rest'));\n    setInitialTime(phase === 8 ? 15 : phase % 2 ? 25 : 5);\n  }, [phase]);\n\n  useEffect(() => {\n    localStorage.setItem('timer', JSON.stringify(timer));\n    if (timer <= 0) {\n      if (isNotificationOn) {\n        new Notification('Current phase is done', {\n          body: 'Your next phase is waiting for you',\n          icon: 'logo512.png',\n        });\n      }\n      if (isSoundOn) {\n        const sound = new Audio(\n          'https://soundbible.com//mp3/Ship_Bell-Mike_Koenig-1911209136.mp3'\n        );\n        sound.play();\n      }\n      dispatch(setPhase('increase'));\n    }\n  }, [timer, isNotificationOn]);\n\n  useInterval(\n    () => {\n      dispatch(setTimer('decrease'));\n    },\n    isActive && timer > 0 ? 60000 : null\n  );\n\n  return (\n    <>\n      <TimerMainContainer>\n        <DonutElement\n          linecap={'round'}\n          strokeWidth={4}\n          styleTrack={{\n            stroke: '#3C4163',\n          }}\n          styleIndicator={{\n            opacity: 0.5,\n            stroke: phase % 2 ? '#9d88de' : '#FFAA5C',\n          }}\n        >\n          <DonutVal showValue={false} symbol=\" \">\n            {timer * (100 / initialTime)}\n          </DonutVal>\n        </DonutElement>\n      </TimerMainContainer>\n      <LabelContainer>\n        <Minutes>{timer}</Minutes>\n        <Label>{timer <= 1 ? 'minute' : 'minutes'}</Label>\n      </LabelContainer>\n    </>\n  );\n};\n\nconst LabelContainer = styled.div`\n  display: flex;\n  position: absolute;\n  top: 41.5%;\n  transform: translateY(-50%);\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Label = styled.div`\n  background: -webkit-linear-gradient(330.95deg, #d2d6ef 15.87%, #9299c2 100%);\n  -webkit-background-clip: text;\n  background-clip: text;\n  -webkit-text-fill-color: transparent;\n  text-shadow: 1px 1px 1px rgba(38, 43, 70, 0.32);\n  font-size: 24px;\n  font-weight: 300;\n  text-align: center;\n  letter-spacing: -0.02em;\n`;\n\nconst Minutes = styled(Label)`\n  font-size: 48px;\n`;\n\nconst TimerMainContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 280px;\n  height: 280px;\n  background: linear-gradient(116.82deg, #494f74 0%, #3a3f5e 100%);\n  mix-blend-mode: normal;\n  box-shadow: -12px -12px 32px rgba(73, 80, 115, 0.72), 12px 12px 32px #2e334e,\n    inset 2px 2px 2px rgba(83, 92, 136, 0.11);\n  border-radius: 50%;\n`;\n\nconst DonutElement = styled(Donut)`\n  filter: drop-shadow(1px 1px 1px rgba(90, 97, 141, 0.81));\n  background: linear-gradient(116.82deg, #494f74 0%, #3a3f5e 100%);\n  mix-blend-mode: normal;\n  box-shadow: -12px -12px 32px rgba(73, 80, 115, 0.72), 12px 12px 32px #2e334e,\n    inset 2px 2px 2px rgba(83, 92, 136, 0.11);\n`;\n\nconst DonutVal = styled(DonutValue)`\n  margin-right: 13px;\n  background: linear-gradient(330.95deg, #d2d6ef 15.87%, #9299c2 100%);\n  text-shadow: 1px 1px 1px rgba(38, 43, 70, 0.32);\n  -webkit-background-clip: text;\n  background-clip: text;\n  -webkit-text-fill-color: transparent;\n`;\n\nexport default TimerMain;\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { setIsActive, setIsNotificationOn, setIsSoundOn } from '../../slices';\nimport { useAppDispatch, useAppSelector } from '../../store';\n\nconst ControlButtons = () => {\n  const [imgPlay, setImgPlay] = useState();\n  const [imgNotification, setImgNotification] = useState();\n  const [imgSound, setImgSound] = useState();\n\n  const dispatch = useAppDispatch();\n  const { isActive, isNotificationOn, isSoundOn } = useAppSelector(\n    ({ timer }) => timer\n  );\n\n  useEffect(() => {\n    const localNotification = localStorage.getItem('notification');\n    if (localNotification) {\n      const localParsed = JSON.parse(localNotification);\n      dispatch(setIsNotificationOn(localParsed));\n    }\n    const localSound = localStorage.getItem('sound');\n    if (localSound) {\n      const localParsed = JSON.parse(localSound);\n      dispatch(setIsSoundOn(localParsed));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('notification', JSON.stringify(isNotificationOn));\n    localStorage.setItem('sound', JSON.stringify(isSoundOn));\n  }, [isNotificationOn, isSoundOn]);\n\n  useEffect(() => {\n    const importImage = async (\n      state: any,\n      condition: boolean,\n      string1: string,\n      string2: string\n    ) => {\n      const imgPath = await import(\n        `assets/${condition ? string1 : string2}.svg`\n      );\n      state(imgPath.default);\n    };\n    importImage(setImgPlay, isActive, 'pause', 'play');\n    importImage(setImgSound, isSoundOn, 'sound', 'mute');\n    importImage(\n      setImgNotification,\n      isNotificationOn,\n      'notification',\n      'nonotification'\n    );\n  }, [isActive, imgPlay, imgSound, isNotificationOn, isSoundOn]);\n\n  return (\n    <ControlButtonsContainer>\n      <Button\n        onClick={() => dispatch(setIsSoundOn())}\n        model=\"sound\"\n        type=\"button\"\n      >\n        <ImageSound src={imgSound} alt=\"mute\" />\n      </Button>\n      <Button\n        onClick={() => dispatch(setIsActive())}\n        model=\"play\"\n        type=\"button\"\n      >\n        <ImagePlay isActive={isActive} src={imgPlay} alt=\"play\" />\n      </Button>\n      <Button\n        onClick={() => dispatch(setIsNotificationOn())}\n        model=\"notification\"\n        type=\"button\"\n      >\n        <ImageNotification\n          isNotificationOn={isNotificationOn}\n          src={imgNotification}\n          alt=\"notification\"\n        />\n      </Button>\n    </ControlButtonsContainer>\n  );\n};\n\ntype ImagePlayProps = {\n  isActive: boolean;\n};\n\nconst ImagePlay = styled.img<ImagePlayProps>`\n  margin-left: ${({ isActive }) => (isActive ? '0' : '3px')};\n`;\n\nconst ImageSound = styled.img`\n  margin-left: 3px;\n`;\n\ntype ImageNotificationOnProps = {\n  isNotificationOn: boolean;\n};\n\nconst ImageNotification = styled.img<ImageNotificationOnProps>`\n  margin-bottom: 2px;\n`;\n\nconst ControlButtonsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  & > * + * {\n    margin-left: 43px;\n  }\n`;\n\ntype ButtonProps = {\n  model: 'sound' | 'play' | 'notification';\n};\n\nconst Button = styled.button<ButtonProps>`\n  display: flex;\n  border-radius: ${({ model }) => (model === 'play' ? '22px' : '16px')};\n  justify-content: center;\n  align-items: center;\n  width: ${({ model }) => (model === 'play' ? '66px' : '44px')};\n  height: ${({ model }) => (model === 'play' ? '66px' : '44px')};\n  background: linear-gradient(135deg, #424869 0%, #4a5178 100%);\n  opacity: 0.95;\n  box-shadow: -6px -6px 20px rgba(85, 93, 131, 0.56),\n    8px 8px 18px rgba(54, 59, 87, 0.2),\n    inset 1px 1px 1px rgba(38, 49, 105, 0.05),\n    inset -1px -1px 4px rgba(83, 92, 136, 0.12);\n`;\n\nexport default ControlButtons;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useAppSelector } from 'store';\n\nconst TaskInfo = () => {\n  const { type, phase } = useAppSelector(({ timer }) => timer);\n  return (\n    <TaskInfoContainer>\n      <TaskName>{type[0].toUpperCase() + type.slice(1)}</TaskName>\n      <TaskList>\n        {[...Array(8)].map((el, i) => (\n          <TaskItem key={i} item={i + 1} phase={phase} />\n        ))}\n      </TaskList>\n    </TaskInfoContainer>\n  );\n};\n\nconst TaskInfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst TaskName = styled.div`\n  font-size: 26px;\n  text-align: center;\n  letter-spacing: -0.02em;\n  background: linear-gradient(330.95deg, #d2d6ef 15.87%, #9299c2 100%);\n  -webkit-text-fill-color: transparent;\n  -webkit-background-clip: text;\n  background-clip: text;\n  text-shadow: 1px 1px 1px rgba(38, 43, 70, 0.32);\n  margin-right: 4px;\n`;\n\nconst TaskList = styled.ul`\n  display: flex;\n  margin-top: 14px;\n  & > * + * {\n    margin-left: 8px;\n  }\n`;\n\ntype TaskItemProps = {\n  phase: number;\n  item: number;\n};\n\nconst TaskItem = styled.li<TaskItemProps>`\n  width: 12px;\n  height: 12px;\n  background: ${({ phase, item }) => {\n    if (phase > item) {\n      if (item % 2 === 0) {\n        return 'linear-gradient(114.79deg, #FFAA5C 56.01%, #F29239 88.75%)';\n      } else {\n        return 'radial-gradient(129.43% 63.16% at 27.83% 4.57%, #612FF5 0%, #855CFF 100%)';\n      }\n    }\n    return 'linear-gradient(135deg, #4f567f 10.94%, #2a304a 100%)';\n  }};\n\n  box-shadow: 2px 2px 4px rgba(50, 54, 83, 0.75),\n    -2px -2px 4px rgba(78, 85, 124, 0.8);\n  border-radius: 8px;\n`;\n\nexport default TaskInfo;\n","import React from 'react';\nimport styled from 'styled-components';\nimport GlobalStyle from './GlobalStyles';\nimport { TimerMain } from './components/timer-main';\nimport { ControlButtons } from './components/control-buttons';\nimport { TaskInfo } from './components/task-info';\n\nconst App = () => (\n  <>\n    <GlobalStyle />\n    <AppContainer>\n      <Title>Neudoro</Title>\n      <TimerMain />\n      <TaskInfo />\n      <ControlButtons />\n    </AppContainer>\n  </>\n);\n\nconst AppContainer = styled.div`\n  position: absolute;\n  width: 100%;\n  height: inherit;\n  min-height: 570px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n`;\n\nconst Title = styled.h4`\n  font-size: 42px;\n  font-weight: 300;\n  background: linear-gradient(330.95deg, #d2d6ef 15.87%, #9299c2 100%);\n  -webkit-text-fill-color: transparent;\n  -webkit-background-clip: text;\n  background-clip: text;\n  text-shadow: 1px 1px 1px rgba(38, 43, 70, 0.32);\n  text-align: center;\n  letter-spacing: -0.02em;\n`;\n\nexport default App;\n","import { combineReducers } from \"@reduxjs/toolkit\";\nimport { timerSlice } from \"../slices\";\n\nconst rootReducer = combineReducers({\n  timer: timerSlice\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { createSelectorHook, useDispatch } from \"react-redux\";\nimport rootReducer, { RootState } from \"./rootReducer\";\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nif (process.env.NODE_ENV === \"development\" && module.hot) {\n  module.hot.accept(\"./rootReducer\", () => {\n    const newRootReducer = require(\"./rootReducer\").default;\n    store.replaceReducer(newRootReducer);\n  });\n}\n\nexport const useAppSelector = createSelectorHook<RootState>();\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n\nexport default store;\n"],"sourceRoot":""}